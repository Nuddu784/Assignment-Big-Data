1. Write a program that calculates and prints the value according to the given formula::"Q = Square root of [(2 C D)/H]\n",

import math

def calculate_value(C, D, H):
    Q = math.sqrt((2 * C * D) / H)
    return Q

# Taking input from the user
C = float(input("Enter the value of C: "))
D = float(input("Enter the value of D: "))
H = float(input("Enter the value of H: "))

# Calculating the value
result = calculate_value(C, D, H)

# Printing the result
print("Q =", result)
Write a program which takes 2 digits, X,Y as input and generates a 2-dimensional array.
The element value in the i-th row and j-th column of the array should be i*j."
def generate_array(X, Y):
    # Create an empty 2-dimensional array
    array = [[0 for j in range(Y)] for i in range(X)]
    
    # Generate the array based on the formula i*j
    for i in range(X):
        for j in range(Y):
            array[i][j] = i * j
    
    return array

# Get user input for the dimensions
X = int(input("Enter the number of rows (X): "))
Y = int(input("Enter the number of columns (Y): "))

# Generate and print the array
result = generate_array(X, Y)
for row in result:
    print(row)

Write a program which takes 2 digits, X,Y as input and generates a 2-dimensional array. 
The element value in the i-th row and j-th column of the array should be i*j."

def generate_array(X, Y):
    array = [[i * j for j in range(Y)] for i in range(X)]
    return array

# Taking input from the user
X = int(input("Enter the number of rows (X): "))
Y = int(input("Enter the number of columns (Y): "))

# Generating the array
result_array = generate_array(X, Y)

# Printing the array
for row in result_array:
    print(row)

4. Write a program that accepts a sequence of whitespace separated words as input and prints 
the words after removing all duplicate words and sorting them alphanumerically."

def remove_duplicates_and_sort(input_string):
    words = input_string.split()
    unique_words = list(set(words))
    unique_words.sort()
    return unique_words

# Accept input from the user
input_sequence = input("Enter a sequence of whitespace-separated words: ")

# Remove duplicates and sort the words
result = remove_duplicates_and_sort(input_sequence)

# Print the sorted words
print("Sorted words without duplicates:")
for word in result:
    print(word)

5. Write a program that accepts a sentence and calculate the number of letters and digits.

def count_letters_digits(sentence):
    letters = 0
    digits = 0

    for char in sentence:
        if char.isalpha():
            letters += 1
        elif char.isdigit():
            digits += 1

    return letters, digits


sentence = input("Enter a sentence: ")
letter_count, digit_count = count_letters_digits(sentence)

print("Number of letters:", letter_count)
print("Number of digits:", digit_count)


 6. A website requires the users to input username and password to register. 
    Write a program to check the validity of password input by users."

def is_valid_password(password):
    # Password length should be between 8 and 20 characters
    if len(password) < 8 or len(password) > 20:
        return False

    # Password should contain at least one uppercase letter
    if not any(char.isupper() for char in password):
        return False

    # Password should contain at least one lowercase letter
    if not any(char.islower() for char in password):
        return False

    # Password should contain at least one digit
    if not any(char.isdigit() for char in password):
        return False

    # Password is valid
    return True


# Test the program
password_input = input("Enter your password: ")

if is_valid_password(password_input):
    print("Password is valid.")
else:
    print("Password is invalid.")


  