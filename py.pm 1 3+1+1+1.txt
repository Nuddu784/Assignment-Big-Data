1. Write a function that stutters a word as if someone is struggling to read it. The first two letters are repeated twice with an ellipsis ... and space after each, and then the word is pronounced with a question mark ?. Examples stutter('incredible') ➞ 'in... in... incredible?' 
stutter('enthusiastic') ➞ 'en... en... enthusiastic?' stutter('outstanding') ➞ 'ou... ou... outstanding?'

def stutter(word):
    first_two_letters = word[:2]
    return f"{first_two_letters}... {first_two_letters}... {word}?"

# Examples
print(stutter('incredible'))     # Output: in... in... incredible?
print(stutter('enthusiastic'))   # Output: en... en... enthusiastic?
print(stutter('outstanding'))    # Output: ou... ou... outstanding?


 2. Create a function that takes an angle in radians
 and returns the corresponding angle in degrees rounded to one decimal place.

import math

def radians_to_degrees(angle_rad):
    angle_deg = math.degrees(angle_rad)
    angle_deg_rounded = round(angle_deg, 1)
    return angle_deg_rounded


 3. In this challenge, establish if a given integer num is a Curzon number.
 If 1 plus 2 elevated to num is exactly divisible by 1 plus 2 multiplied by num, then num is a Curzon number. 
Given a non-negative integer num, implement a function that returns True if num is a Curzon number, or False otherwise."

def is_curzon_number(num):
    numerator = 2**num + 1
    denominator = 2*num + 1
    return numerator % denominator == 0
5. Create a function that returns a base-2 (binary) representation of a base-10 (decimal) string number.
 To convert is simple: ((2) means base-2 and (10) means base-10) 010101001(2) = 1 + 8 + 32 + 128.

def decimal_to_binary(decimal):
    binary = ""
    decimal = int(decimal)  # Convert input to integer

    if decimal == 0:
        return "0"  # Special case for 0

    while decimal > 0:
        remainder = decimal % 2
        binary = str(remainder) + binary
        decimal = decimal // 2

    return binary

